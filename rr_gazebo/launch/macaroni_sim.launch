<launch>
    <arg name="world" default="worlds/empty.world"/>
    <arg name="start_pose" default="0 0 0"/>

    <param name="/use_sim_time" value="true" />

    <node name="gazebo" pkg="gazebo_ros" type="gzserver" respawn="false" output="screen"
          args="-e ode $(arg world)" required="false">
        <remap from="/camera_center/image_raw" to="/camera_center/image_color_rect"/>
    </node>

    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" required="true"/>

    <include file="$(find rr_platform)/launch/macaroni_state_publisher.launch"/>

    <node pkg="rr_platform" type="scanToPointCloud" name="scanToPointCloud" output="screen">
        <param name="min_point_dist" type="double" value="0"/>
    </node>

    <node name="controller_spawner" pkg="rr_gazebo" type="controller_spawner.py" respawn="false" output="screen"
          args="joint_state_controller left_wheel_effort_controller right_wheel_effort_controller left_steer_position_controller right_steer_position_controller"/>

    <rosparam file="$(find rr_gazebo)/config/macaroni_control.yaml" command="load"/>

    <node name="sim_controller" pkg="rr_gazebo" type="sim_car_controller" respawn="false" output="screen">
        <rosparam command="load" file="$(find rr_description)/conf/macaroni_car_params.yaml"/>
        <rosparam>
            max_torque: 0.25
            speed_kP: 1.0
            speed_kI: 0
            speed_kD: 0.05
            left_motor_joint_name: axle_to_left_wheel
            right_motor_joint_name: axle_to_right_wheel
        </rosparam>
    </node>

    <node name="imu_axes" pkg="rr_gazebo" type="imu_axes" respawn="false" output="screen" />

    <node name="spawn_platform_script" pkg="rr_gazebo" type="spawn_macaroni_platform.sh"
          args="$(arg start_pose)"/>

    <node name="set_physics_props" pkg="rr_gazebo" type="set_physics_props.sh"/>

</launch>
